package dao;

import dao.mappers.IMapResultSetIntoEntity;
import java.sql.Connection;
import java.sql.SQLException;

import domain.model.Employee;

public class EmployeeRepository extends RepositoryBase<Employee>{
	
	public EmployeeRepository(Connection connection, IMapResultSetIntoEntity<Employee> mapper) {
		super(connection,mapper);
	}
	
	@Override
	protected String createTableSql() {
		return "" + "CREATE TABLE employee("
				+ "id bigint GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,"
				+ "name varchar(20)," + "surname varchar(50)" + "identityNumber varchar(9),"
				+ "FOREIGN KEY (PAYMENT_ID) REFERENCES payment(id),"
		        + "FOREIGN KEY (CLIENT_ID) REFERENCES employee(id),"
		        + "FOREIGN KEY (TOUR_ID) REFERENCES tour(id)," + ")";		
	}

	@Override
	protected String tableName() {
		return "employee";
	}

    @Override
    protected String insertSql() {
        return "INSERT INTO employee("
                + "name, surname, identityNumber,"
                + "PAYMENT_ID,"
                + "CLIENT_ID,"
                + "TOUR_ID"
                + ") VALUES (?,?,?,?,?,?)";
    }

    @Override
    protected String updateSql() {
        return "UPDATE EMPLOYEE SET (name, surname, identityNumber, PAYMENT_ID" +
                ", CLIENT_ID, TOUR_ID)= (?,?,?,?,?,?) WHERE id = ?";
    }

    @Override
    protected void setUpdate(Employee entity) throws SQLException {
        update.setString(1, entity.getName());
        update.setString(2, entity.getSurname());
        update.setString(3, entity.getIdentityNumber());
        update.setInt(4, entity.getPayment().getId());
        update.setInt(5, entity.getClient().getId());
        update.setInt(6, entity.getTour().getId());
    }

    @Override
    protected void setInsert(Employee entity) throws SQLException {
        insert.setString(1, entity.getName());
        insert.setString(2, entity.getSurname());
        insert.setString(3, entity.getIdentityNumber());
        insert.setInt(4, entity.getPayment().getId());
        insert.setInt(5, entity.getClient().getId());
        insert.setInt(6, entity.getTour().getId());	
	}
}	

