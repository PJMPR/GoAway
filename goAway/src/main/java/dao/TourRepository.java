package dao;

import dao.mappers.IMapResultSetIntoEntity;
import java.sql.Connection;
import java.sql.Date;
import java.sql.SQLException;

import domain.model.EnumDictionary;
import domain.model.Tour;

public class TourRepository extends RepositoryBase<Tour>{
	
	public TourRepository(Connection connection, IMapResultSetIntoEntity<Tour> mapper) {
        super(connection, mapper);
    }

	@Override
	protected String createTableSql() {
		return "" + "CREATE TABLE tour("
				+ "id bigint GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,"
				+ "name varchar(20)," 
				+ "dateOfDeparture date," 
				+ "countryFrom varchar(20),"
				+ "countryTo varchar(20)," 
				+ "amountOfDays int,"
			    + ")";		
	}

    @Override
    protected String tableName() {
        return "tour";
    }

    @Override
    protected String insertSql() {
        return "INSERT INTO tour("
                + "name, dateOfDeparture, countryFrom, countryTo, amountOfDays"
                + ") VALUES (?,?,?,?,?)";
    }

    @Override
    protected String updateSql() {
        return "UPDATE TOUR SET (name, dateOfDeparture, countryFrom, countryTo, amountOfDays)= (?,?,?,?,?) WHERE id = ?";
    }

    @Override
    protected void setUpdate(Tour entity) throws SQLException {
        update.setString(1, entity.getName());
        update.setDate(2, (Date) entity.getDateOfDeparture());
        update.setString(3, entity.getCountryFrom());
        update.setString(3, entity.getCountryTo());
        update.setInt(4, entity.getAmountOfDays());
    }

    @Override
    protected void setInsert(Tour entity) throws SQLException {
        insert.setString(1, entity.getName());
        insert.setDate(2, (Date) entity.getDateOfDeparture());
        insert.setString(3, entity.getCountryFrom());
        insert.setString(3, entity.getCountryTo());
        insert.setInt(4, entity.getAmountOfDays());
	}
}

